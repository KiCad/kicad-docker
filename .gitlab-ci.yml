# Pipeline schedule vars
# KI_BUILD_TYPE
#   daily
#   monthly
#   release

spec:
  inputs:
    build_type:
      description: "Affects the image handling based on mode"
      options: ['daily', 'monthly', 'release9', 'release8']
      default: daily
    build_version:
      description: "KiCad version to build, only used for release builds, this should be the release tag"
      default:
---

variables:
  CONTAINER_NAME: kicad
  GL_CONTAINER_ROOT: ${CI_REGISTRY}/${CI_PROJECT_PATH}
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - deploy

.template:build_base:
  tags:
    - kicad-dind
  image: docker:24.0.9
  services:
    - docker:24.0.9-dind
  stage: build
  variables:
    GL_CONTAINER: "${GL_CONTAINER_ROOT}/${CONTAINER_NAME}"
  before_script:
    - apk add --no-cache bash
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin


.template:build_legacy:
  extends: .template:build_base
  script:
    - docker build --pull -t kicad:build-temp -f ${DOCKERFILE_PATH} .
    - echo $[[ inputs.build_type ]]
    - echo $CONTAINER_TAG
    - echo $GL_CONTAINER
    - /bin/bash ./tag-helper.sh -c kicad:build-temp -t $[[ inputs.build_type ]] -b $CONTAINER_TAG -i $GL_CONTAINER -p
  artifacts:
    paths:
      - docker_tags.txt

.template:build_arch:
  extends: .template:build_base
  image: docker:24.0.9
  services:
    - docker:24.0.9-dind
  script:
    - docker build --pull --tag kicad:$ARCH-build-temp -f ${DOCKERFILE_PATH} .
    - docker build --pull --build-arg="include_3d=true" --tag kicad:$ARCH-build-temp-full -f ${DOCKERFILE_PATH} .
    - echo $[[ inputs.build_type ]]
    - echo $CONTAINER_TAG
    - echo $GL_CONTAINER
    - /bin/bash ./tag-helper.sh -c kicad:$ARCH-build-temp -a $ARCH -t $[[ inputs.build_type ]] -b $CONTAINER_TAG -i $GL_CONTAINER -p -o ${ARCH}-docker_tags.txt
    - /bin/bash ./tag-helper.sh -c kicad:$ARCH-build-temp-full -a $ARCH -t $[[ inputs.build_type ]] -b ${CONTAINER_TAG}-full -i $GL_CONTAINER -p -o ${ARCH}-full-docker_tags.txt
  artifacts:
    paths:
      - $ARCH-docker_tags.txt
      - $ARCH-full-docker_tags.txt

.template:build_arch_release:
  extends: .template:build_base
  image: docker:24.0.9
  services:
    - docker:24.0.9-dind
  script:
    - docker build --pull --build-arg="KICAD_VERSION=${VERSION}" --tag kicad:$ARCH-build-temp -f ${DOCKERFILE_PATH} .
    - docker build --pull --build-arg="KICAD_VERSION=${VERSION}" --build-arg="include_3d=true" --tag kicad:$ARCH-build-temp-full -f ${DOCKERFILE_PATH} .
    - echo $[[ inputs.build_type ]]
    - echo $CONTAINER_TAG
    - echo $GL_CONTAINER
    - /bin/bash ./tag-helper.sh -c kicad:$ARCH-build-temp -a $ARCH -t $[[ inputs.build_type ]] -b $CONTAINER_TAG -r $[[ inputs.build_version ]] -i $GL_CONTAINER -p -o ${ARCH}-docker_tags.txt
    - /bin/bash ./tag-helper.sh -c kicad:$ARCH-build-temp-full -a $ARCH -t $[[ inputs.build_type ]] -b ${CONTAINER_TAG}-full -r $[[ inputs.build_version ]] -i $GL_CONTAINER -p -o ${ARCH}-full-docker_tags.txt
  artifacts:
    paths:
      - $ARCH-docker_tags.txt
      - $ARCH-full-docker_tags.txt

.template:build_release_legacy:
  extends: .template:build_base
  script:
    - docker build --pull -t kicad:build-temp -f ${DOCKERFILE_PATH} --build-arg="KICAD_VERSION=$[[ inputs.build_version ]]" .
    - echo $[[ inputs.build_type ]]
    - echo $CONTAINER_TAG
    - echo $GL_CONTAINER
    - /bin/bash ./tag-helper.sh -c kicad:build-temp -t $[[ inputs.build_type ]] -b $CONTAINER_TAG -r $[[ inputs.build_version ]] -i $GL_CONTAINER -p
  artifacts:
    paths:
      - docker_tags.txt

.template:deploy_to_dh:
  tags:
    - kicad-dind
  image: docker:24.0.9
  services:
    - docker:24.0.9-dind
  stage: deploy
  before_script:
    - apk add --no-cache bash
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DH_PASSWORD" | docker login -u "$DH_USER" docker.io --password-stdin
    - echo "$GH_TOKEN" | docker login -u "$GH_USER" ghcr.io --password-stdin
  script:
    - /bin/bash ./deploy-helper.sh -i index.docker.io/kicad/kicad
    - /bin/bash ./deploy-helper.sh -i ghcr.io/kicad/kicad

.template:deploy_multi:
  tags:
    - kicad-dind
  image: docker:24.0.9
  services:
    - docker:24.0.9-dind
  stage: deploy
  before_script:
    - apk add --no-cache bash
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DH_PASSWORD" | docker login -u "$DH_USER" docker.io --password-stdin
    - echo "$GH_TOKEN" | docker login -u "$GH_USER" ghcr.io --password-stdin
  script:
    - /bin/bash ./deploy-helper-multi.sh -i index.docker.io/kicad/kicad -t arm64-docker_tags.txt -t amd64-docker_tags.txt -p
    - /bin/bash ./deploy-helper-multi.sh -i ghcr.io/kicad/kicad -t arm64-docker_tags.txt -t amd64-docker_tags.txt -p
#    - /bin/bash ./deploy-helper-multi.sh -i index.docker.io/kicad/kicad -t arm64-full-docker_tags.txt -t amd64-full-docker_tags.txt -p
#    - /bin/bash ./deploy-helper-multi.sh -i ghcr.io/kicad/kicad -t arm64-full-docker_tags.txt -t amd64-full-docker_tags.txt -p

build_nightly_amd64:
  extends: .template:build_arch
  variables:
    DOCKERFILE_PATH: Dockerfile.nightly
    CONTAINER_TAG: nightly
    ARCH: amd64
  rules:
    - if: '"$[[ inputs.build_type ]]" == "daily"'

#build_nightly_arm64:
#  extends: .template:build_arch
#  tags:
#    - saas-linux-medium-arm64
#  variables:
#    DOCKERFILE_PATH: Dockerfile.nightly
#    CONTAINER_TAG: nightly
#    ARCH: arm64
#  rules:
#    - if: '"$[[ inputs.build_type ]]" == "daily"'

deploy_nightly:
  extends: .template:deploy_multi
  dependencies:
    - build_nightly_amd64
#    - build_nightly_arm64
  variables:
    CONTAINER_TAG: nightly
  rules:
    - if: '"$[[ inputs.build_type ]]" == "daily"'

build_nightly_monthly:
  extends: .template:build_legacy
  variables:
    DOCKERFILE_PATH: Dockerfile.nightly
    CONTAINER_TAG: nightly
  rules:
    - if: '"$[[ inputs.build_type ]]" == "monthly"'

deploy_nightly_monthly:
  extends: .template:deploy_to_dh
  dependencies:
    - build_nightly_monthly
  variables:
    CONTAINER_TAG: nightly
  rules:
    - if: '"$[[ inputs.build_type ]]" == "monthly"'

build_8:
  extends: .template:build_release_legacy
  variables:
    DOCKERFILE_PATH: Dockerfile.8.0-stable
    CONTAINER_TAG: "8.0"
  rules:
    - if: '"$[[ inputs.build_type ]]" == "release8"'

deploy_8:
  extends: .template:deploy_to_dh
  rules:
    - if: '"$[[ inputs.build_type ]]" == "release8"'
  dependencies:
    - build_8
  variables:
    CONTAINER_TAG: "8.0"


build_9_amd64:
  extends: .template:build_arch_release
  variables:
    DOCKERFILE_PATH: Dockerfile.9.0-stable
    CONTAINER_TAG: "9.0"
    ARCH: amd64
  rules:
    - if: '"$[[ inputs.build_type ]]" == "release9"'

#build_9_arm64:
#  extends: .template:build_arch_release
#  tags:
#    - saas-linux-medium-arm64
#  variables:
#    DOCKERFILE_PATH: Dockerfile.9.0-stable
#    CONTAINER_TAG: "9.0"
#    ARCH: arm64
#  rules:
#    - if: '"$[[ inputs.build_type ]]" == "release9"'

deploy_9:
  extends: .template:deploy_multi
  dependencies:
    - build_9_amd64
#    - build_9_arm64
  variables:
    CONTAINER_TAG: "9.0"
  rules:
    - if: '"$[[ inputs.build_type ]]" == "release9"'